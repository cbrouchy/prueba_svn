//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIARH.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RRHH_V2SP : DbContext
    {
        public RRHH_V2SP()
            : base("name=RRHH_V2SP")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<spInstrumentoLegalINS__Result> spInstrumentoLegalINS_(string instrumentoLegal1, Nullable<int> idTipoInstrumentoLegal, string descripcion)
        {
            var instrumentoLegal1Parameter = instrumentoLegal1 != null ?
                new ObjectParameter("instrumentoLegal1", instrumentoLegal1) :
                new ObjectParameter("instrumentoLegal1", typeof(string));
    
            var idTipoInstrumentoLegalParameter = idTipoInstrumentoLegal.HasValue ?
                new ObjectParameter("idTipoInstrumentoLegal", idTipoInstrumentoLegal) :
                new ObjectParameter("idTipoInstrumentoLegal", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInstrumentoLegalINS__Result>("spInstrumentoLegalINS_", instrumentoLegal1Parameter, idTipoInstrumentoLegalParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<spInstrumentoLegalSELbyTexto__Result1> spInstrumentoLegalSELbyTexto_(string name, Nullable<bool> activo)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInstrumentoLegalSELbyTexto__Result1>("spInstrumentoLegalSELbyTexto_", nameParameter, activoParameter);
        }
    
        public virtual ObjectResult<spInstrumentoLegalUPD__Result> spInstrumentoLegalUPD_(Nullable<int> idInstrumentoLegal, string instrumentoLegal1, Nullable<int> idTipoInstrumentoLegal, string descripcion, Nullable<bool> estaActivo, Nullable<System.DateTime> fecha)
        {
            var idInstrumentoLegalParameter = idInstrumentoLegal.HasValue ?
                new ObjectParameter("idInstrumentoLegal", idInstrumentoLegal) :
                new ObjectParameter("idInstrumentoLegal", typeof(int));
    
            var instrumentoLegal1Parameter = instrumentoLegal1 != null ?
                new ObjectParameter("instrumentoLegal1", instrumentoLegal1) :
                new ObjectParameter("instrumentoLegal1", typeof(string));
    
            var idTipoInstrumentoLegalParameter = idTipoInstrumentoLegal.HasValue ?
                new ObjectParameter("idTipoInstrumentoLegal", idTipoInstrumentoLegal) :
                new ObjectParameter("idTipoInstrumentoLegal", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var estaActivoParameter = estaActivo.HasValue ?
                new ObjectParameter("estaActivo", estaActivo) :
                new ObjectParameter("estaActivo", typeof(bool));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInstrumentoLegalUPD__Result>("spInstrumentoLegalUPD_", idInstrumentoLegalParameter, instrumentoLegal1Parameter, idTipoInstrumentoLegalParameter, descripcionParameter, estaActivoParameter, fechaParameter);
        }
    
        public virtual ObjectResult<spRefPaisNacionalidadINS_Result> spRefPaisNacionalidadINS(string pais, string nacionalidad)
        {
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("nacionalidad", nacionalidad) :
                new ObjectParameter("nacionalidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRefPaisNacionalidadINS_Result>("spRefPaisNacionalidadINS", paisParameter, nacionalidadParameter);
        }
    
        public virtual ObjectResult<spRefPaisNacionalidadSEL_Result1> spRefPaisNacionalidadSEL(string name, Nullable<bool> activo)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRefPaisNacionalidadSEL_Result1>("spRefPaisNacionalidadSEL", nameParameter, activoParameter);
        }
    
        public virtual ObjectResult<spRefPaisNacionalidadUPD_Result> spRefPaisNacionalidadUPD(Nullable<int> idPaisNacionalidad, string pais, string nacionalidad, Nullable<bool> estaActivo, Nullable<System.DateTime> fecha)
        {
            var idPaisNacionalidadParameter = idPaisNacionalidad.HasValue ?
                new ObjectParameter("idPaisNacionalidad", idPaisNacionalidad) :
                new ObjectParameter("idPaisNacionalidad", typeof(int));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("nacionalidad", nacionalidad) :
                new ObjectParameter("nacionalidad", typeof(string));
    
            var estaActivoParameter = estaActivo.HasValue ?
                new ObjectParameter("estaActivo", estaActivo) :
                new ObjectParameter("estaActivo", typeof(bool));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRefPaisNacionalidadUPD_Result>("spRefPaisNacionalidadUPD", idPaisNacionalidadParameter, paisParameter, nacionalidadParameter, estaActivoParameter, fechaParameter);
        }
    }
}
